#include "resnet.hpp"
#include "dataset.hpp"
#include "mem_pool.h"

using namespace Impl;
using namespace std;

int _main() {
  // 1. load_single resnet18 model
  // 2. load_single image dataset
  // 3. inference

#ifdef DATASET_ROOT
#ifdef RESNET18_ROOT

#if SIMULATE || DEBUG_ONE_ROUND
  cout << "Only simulate one round." << endl;
  auto dataset = Impl::ImageDataset(DATASET_ROOT, Impl::DeviceType::CUDA, 1);
#else
  auto dataset = Impl::ImageDataset(DATASET_ROOT, Impl::DeviceType::CUDA);
#endif
  string model_path = RESNET18_ROOT;
  model_path += "/resnet18";
  ResNet18 resnet18(model_path);
  resnet18.to(Impl::DeviceType::CUDA);
  resnet18.printModule("resnet18");
  std::cout << std::endl;

  int num_correct = 0;
  int num_total = 0;
  SimpleTimer timer;
  timer.start("total_time");
  for (int i = 0; i < dataset.size(); i++) {
    timer.start("forward");

    timer.start("preprocess");
    auto data = dataset.next();
    auto input = std::move(data.first.first);
    auto label = std::move(data.first.second);
    timer.end("preprocess");

    timer.start("forward");
    auto result = std::move(resnet18.forward(std::move(input)));
    timer.end("forward");

    timer.start("postprocess");
    result.to(Impl::DeviceType::CPU);
    label.to(Impl::DeviceType::CPU);

    Tensor original_label = TensorOps::argmax(label, 1);
    Tensor predicted_result = TensorOps::argmax(result, 1);

    auto correct = TensorOps::sum_equal(original_label, predicted_result);
    num_correct += correct;
    num_total += predicted_result.sizes()[0];
    timer.end("postprocess");
  }
  std::cout << "Accuracy Compared to PyTorch ResNet18 Implementation: " << num_correct << "/" << num_total << std::endl
            << std::endl;

  timer.end("total_time");

  timer.printStat("preprocess");
  timer.printStat("forward");
  timer.printStat("postprocess");
  resnet18.printStat("resnet18");

#endif
#endif

#ifndef DATASET_ROOT
  std::cout << "Dataset not found by CMake. Check CMake output." << std::endl;
#endif

#ifndef RESNET18_ROOT
  std::cout << "ResNet 18 weights not generated by CMake. Check CMake output." << std::endl;
#endif

  return 0;

}

int main() {
  init_mem_pool();
  _main();
  deinit_mem_pool();
  return 0;
}
